import mongoose, { Schema, Document, Model } from "mongoose";
import { cencusType } from "../types/cencus-type";

interface ICensusDocument extends cencusType, Document {}

const CensusSchema: Schema = new Schema(
  {
    staffaccountcreate: { type: String, required: false },
    dateofcencus: { type: String, required: true },
    areaofcencusstreet: { type: String, required: true },
    firstname: { type: String, required: true },
    middlename: { type: String, required: true },
    lastname: { type: String, required: true },
    birthday: { type: String, required: true },
    age: { type: Number, required: true, min: 1 },
    gender: {
      type: String,
      enum: ["female", "male"],
      required: true,
    },
    civilstatus: {
      type: String,
      enum: ["single", "married", "widowed", "seperated"],
      required: true,
    },
    currentschoolenrollment: {
      type: String,
      enum: ["yes", "no"],
      required: true,
    },
    educationalattainment: {
      type: String,
      enum: [
        "NO GRADE COMPLETED",
        "PRESCHOOL",
        "KINDERGARTEN",
        "GRADE 1 (K TO 12)",
        "GRADE 2 (K TO 12)",
        "GRADE 3 (K TO 12)",
        "GRADE 4 (K TO 12)",
        "GRADE 5 (K TO 12)",
        "GRADE 6 (K TO 12)",
        "GRADE 7 (K TO 12)",
        "GRADE 8 (K TO 12)",
        "GRADE 9 (K TO 12)",
        "GRADE 10 (K TO 12)",
        "GRADE 11 (K TO 12)",
        "GRADE 12 (K TO 12)",
        "GRADE 1 (OLD CURRICULUM)",
        "GRADE 2 (OLD CURRICULUM)",
        "GRADE 3 (OLD CURRICULUM)",
        "GRADE 4 (OLD CURRICULUM)",
        "GRADE 5 (OLD CURRICULUM)",
        "GRADE 6 (OLD CURRICULUM)",
        "GRADE 6 GRADUATE (OLD CURRICULUM)",
        "GRADE 7 GRADUATE (OLD CURRICULUM)",
        "1ST YEAR HIGH SCHOOL (OLD CURRICULUM)",
        "2ND YEAR HIGH SCHOOL (OLD CURRICULUM)",
        "3RD YEAR HIGH SCHOOL (OLD CURRICULUM)",
        "4TH YEAR HIGH SCHOOL (OLD CURRICULUM)",
        "HIGH SCHOOL GRADUATE (OLD CURRICULUM)",
        "1ST YEAR COLLEGE",
        "2ND YEAR COLLEGE",
        "3RD YEAR COLLEGE",
        "4TH YEAR COLLEGE",
        "COLLEGE GRADUATE",
        "POSTGRADUATE STUDIES",
      ],
      required: true,
    },
    employmentstatus: {
      type: String,
      enum: ["employed", "selfemployed", "unemployed", "student", "retired"],
      required: true,
    },
    occupation: { type: String, required: true },
    housenumber: { type: Number, required: true, min: 1 },
    streetname: { type: String, required: true },
    barangay: { type: String, required: true },
    city: { type: String, required: true },
    province: { type: String, required: true },
    housetype: {
      type: String,
      enum: ["owner", "renter", "sharer", "informal", "settler"],
      required: true,
    },
    healthstatus: {
      type: String,
      enum: ["good", "fair", "poor"],
      required: true,
    },
    disabilitystatus: {
      type: String,
      enum: ["yes", "no"],
      required: true,
    },
    disabilitytype: { type: String, required: false },
    existinghealthcondition: { type: String, required: true },
    fullyimmunized: {
      type: String,
      enum: ["yes", "no"],
      required: true,
    },
    covid19vaccination: {
      type: String,
      enum: ["yes", "no"],
      required: true,
    },
    housingtype: {
      type: String,
      enum: [
        "SINGLE HOUSE",
        "APARTMENT",
        "COMPOUND",
        "GOVERMENT HOUSING",
        "INFORMAL SHELTER",
      ],
      required: true,
    },
    yearofconstructed: { type: String, required: false },
    residentlived: {
      type: String,
      enum: ["yes", "no"],
      required: true,
    },
    barangayresidence: { type: String, required: false },
    cityresidence: { type: String, required: false },
    municipalityresidence: { type: String, required: false },
    provinceresidence: { type: String, required: false },
    reasonformoving: { type: String, required: false },
    mobilenumber: { type: Number, required: true, min: 1 },
    emergencycontactname: { type: String, required: true },
    emergencycontactnumber: { type: Number, required: true, min: 1 },
    relationshiptoemergencycontact: { type: String, required: true },
    numberofhousemembers: { type: Number, required: true, min: 1 },
    householdMembers: {
      type: [
        {
          relationship: {
            type: String,
            enum: [
              "SPOUSE",
              "SON",
              "DAUGHTER",
              "FATHER",
              "MOTHER",
              "BROTHER",
              "SISTER",
              "GRANDCHILD",
              "GRANDPARENT",
              "UNCLE",
              "AUNT",
              "NEPHEW",
              "NIECE",
              "COUSIN",
              "IN-LAW",
              "HOUSEHELP",
              "BOARDER",
            ],
            required: true,
          },
          firstname: { type: String, required: true },
          middlename: { type: String, required: true },
          lastname: { type: String, required: true },
          birthday: { type: String, required: true },
          age: { type: Number, required: true, min: 1 },
          gender: {
            type: String,
            enum: ["female", "male"],
            required: true,
          },
          civilstatus: {
            type: String,
            enum: ["single", "married", "widowed", "seperated"],
            required: true,
          },
          placeofbirth: { type: String, required: true },
          citizenship: {
            type: String,
            enum: [
              "FILIPINO",
              "DUAL CITIZEN",
              "NATURALIZED FILIPINO",
              "FOREIGNER",
            ],
            required: true,
          },
          mobilenumber: { type: Number, required: true, min: 1 },
          emergencycontactname: { type: String, required: true },
          emergencycontactnumber: { type: Number, required: true, min: 1 },
          relationshiptoemergencycontact: { type: String, required: true },
          emailaddress: { type: String, required: true },
          governmentid: {
            type: String,
            enum: [
              "",
              "SSS",
              "TIN",
              "PAGIBIG",
              "PHILHEALTH",
              "NATIONAL ID",
              "BARANGAY ID",
            ],
            required: false,
          },
          governmentidnumber: { type: Number, required: false },
          currentschoolenrollment: {
            type: String,
            enum: ["yes", "no"],
            required: true,
          },
          schooltype: {
            type: String,
            enum: ["PUBLIC", "PRIVATE"],
            required: true,
          },
          educationalattainment: {
            type: String,
            enum: [
              "NO GRADE COMPLETED",
              "PRESCHOOL",
              "KINDERGARTEN",
              "GRADE 1 (K TO 12)",
              "GRADE 2 (K TO 12)",
              "GRADE 3 (K TO 12)",
              "GRADE 4 (K TO 12)",
              "GRADE 5 (K TO 12)",
              "GRADE 6 (K TO 12)",
              "GRADE 7 (K TO 12)",
              "GRADE 8 (K TO 12)",
              "GRADE 9 (K TO 12)",
              "GRADE 10 (K TO 12)",
              "GRADE 11 (K TO 12)",
              "GRADE 12 (K TO 12)",
              "GRADE 1 (OLD CURRICULUM)",
              "GRADE 2 (OLD CURRICULUM)",
              "GRADE 3 (OLD CURRICULUM)",
              "GRADE 4 (OLD CURRICULUM)",
              "GRADE 5 (OLD CURRICULUM)",
              "GRADE 6 (OLD CURRICULUM)",
              "GRADE 6 GRADUATE (OLD CURRICULUM)",
              "GRADE 7 GRADUATE (OLD CURRICULUM)",
              "1ST YEAR HIGH SCHOOL (OLD CURRICULUM)",
              "2ND YEAR HIGH SCHOOL (OLD CURRICULUM)",
              "3RD YEAR HIGH SCHOOL (OLD CURRICULUM)",
              "4TH YEAR HIGH SCHOOL (OLD CURRICULUM)",
              "HIGH SCHOOL GRADUATE (OLD CURRICULUM)",
              "1ST YEAR COLLEGE",
              "2ND YEAR COLLEGE",
              "3RD YEAR COLLEGE",
              "4TH YEAR COLLEGE",
              "COLLEGE GRADUATE",
              "POSTGRADUATE STUDIES",
            ],
            required: true,
          },
          employmentstatus: {
            type: String,
            enum: [
              "employed",
              "selfemployed",
              "unemployed",
              "student",
              "retired",
            ],
            required: true,
          },
          occupation: { type: String, required: true },
          healthstatus: {
            type: String,
            enum: ["good", "fair", "poor"],
            required: true,
          },
          disabilitystatus: {
            type: String,
            enum: ["yes", "no"],
            required: true,
          },
          disabilitytype: { type: String, required: false },
          existinghealthcondition: { type: String, required: true },
          fullyimmunized: {
            type: String,
            enum: ["yes", "no"],
            required: true,
          },
          covid19vaccination: {
            type: String,
            enum: ["yes", "no"],
            required: true,
          },
          residentlived: {
            type: String,
            enum: ["yes", "no"],
            required: true,
          },
          barangayresidence: { type: String, required: false },
          cityresidence: { type: String, required: false },
          municipalityresidence: { type: String, required: false },
          provinceresidence: { type: String, required: false },
          reasonformoving: { type: String, required: false },
        },
      ],
      required: false,
    },
    archived: { type: Boolean, default: false, required: false },
    descriptor: { type: [Number], required: false },
    yearconducting: {
      type: String,
      enum: ["2025", "2026", "2027", "2028", "2029", "2030"],
      required: true,
    },
    citizenship: {
      type: String,
      enum: ["FILIPINO", "DUAL CITIZEN", "NATURALIZED FILIPINO", "FOREIGNER"],
      required: true,
    },
    placeofbirth: { type: String, required: true },
    emailadress: { type: String, required: true },
    governmentid: {
      type: String,
      enum: [
        "",
        "SSS",
        "TIN",
        "PAGIBIG",
        "PHILHEALTH",
        "NATIONAL ID",
        "BARANGAY ID",
      ],
      required: false,
    },
    governmentidnumber: { type: Number, required: false },
    schooltype: {
      type: String,
      enum: ["PUBLIC", "PRIVATE"],
      required: true,
    },
  },
  {
    timestamps: true,
  }
);

export const cencusModel: Model<ICensusDocument> =
  mongoose.model<ICensusDocument>("cencusData", CensusSchema);
